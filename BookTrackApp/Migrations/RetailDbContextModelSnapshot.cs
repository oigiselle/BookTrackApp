// <auto-generated />
using BookTrack_Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookTrackApp.Migrations
{
    [DbContext(typeof(RetailDbContext))]
    partial class RetailDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookTrack_Models.Book", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeNameToken")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ISBN");

                    b.HasIndex("TypeNameToken");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookTrack_Models.Category", b =>
                {
                    b.Property<string>("NameToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryTypeType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NameToken");

                    b.HasIndex("CategoryTypeType");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BookTrack_Models.CategoryType", b =>
                {
                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Type");

                    b.ToTable("CategoriesType");
                });

            modelBuilder.Entity("BookTrack_Models.Book", b =>
                {
                    b.HasOne("BookTrack_Models.Category", "Type")
                        .WithMany("Books")
                        .HasForeignKey("TypeNameToken");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BookTrack_Models.Category", b =>
                {
                    b.HasOne("BookTrack_Models.CategoryType", null)
                        .WithMany("Category")
                        .HasForeignKey("CategoryTypeType");
                });

            modelBuilder.Entity("BookTrack_Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookTrack_Models.CategoryType", b =>
                {
                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
